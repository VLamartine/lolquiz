{"version":3,"sources":["Navbar/Navbar.module.css","Question/AudioQuestion/Question.module.css","Navbar/Sidebar/Sidebar.module.css","Question/SpellQuestion/SpellQuestion.module.css","Backdrop/Backdrop.module.css","App.module.css","Button.js","consts.js","utils.js","Question/AudioQuestion/AudioQuestion.js","Question/SpellQuestion/SpellQuestion.js","Navbar/Sidebar/Sidebar.js","Backdrop/Backdrop.js","Navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","props","onClick","click","className","classes","children","DDRAGON_BASE_URL","data","champions","keys","shuffleChampions","numberChampions","options","championKeys","Object","i","length","option","Math","floor","random","includes","push","getChampionDataById","id","champion","getChampionNameById","name","AudioQuestion","version","questionOptions","updateScore","nextQuestion","mode","useState","answered","setAnswered","correct","setCorrect","audio","setAudio","subPath","imageUrl","myConsts","audioUrl","useEffect","Audio","question","play","button","audioButton","join","map","userAnswer","isCorrect","checkAnswer","answer","wrong","src","alt","height","width","pause","nextButton","SpellQuestion","spell","hotkey","image","style","fontWeight","Sidebar","toggleGamemode","open","sidebarClasses","sidebar","close","list","list_item","Backdrop","backdrop","Navbar","gamemode","score","navbar","mobile","navbar_button","toggle","Provider","value","size","navbar_menu","color","show","desktop","nav_button","active","spellOrder","App","setScore","setGamemode","setVersion","component","setComponent","showSidebar","setShowSidebar","generateQuoteQuestion","useCallback","utils","generateChampionSpellQuestion","spells","passive","spellIndex","full","a","fetch","then","r","json","fetchData","getNextQuestion","questionMode","quoteQuestion","quoteComponent","championQuestion","prevScore","Fragment","window","confirm","footbar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dc6079d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2wX2o\",\"span\":\"Navbar_span__3BPz-\",\"navbar_menu\":\"Navbar_navbar_menu__3yNS-\",\"navbar_button\":\"Navbar_navbar_button__37S_x\",\"score\":\"Navbar_score__2Irmu\",\"desktop\":\"Navbar_desktop__2nDYo\",\"mobile\":\"Navbar_mobile__3bwDI\",\"nav_item\":\"Navbar_nav_item__1y8hV\",\"nav_button\":\"Navbar_nav_button__1E22i\",\"active\":\"Navbar_active__OkqV9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"question\":\"Question_question__Chf5l\",\"button\":\"Question_button__ZFmMW\",\"audioButton\":\"Question_audioButton__1mpuW\",\"nextButton\":\"Question_nextButton__2rYZG\",\"options\":\"Question_options__35V2O\",\"option\":\"Question_option__MaXpe\",\"answer\":\"Question_answer__3MqNq\",\"correct\":\"Question_correct__1p24o\",\"wrong\":\"Question_wrong__2ejfQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2r_Fv\",\"open\":\"Sidebar_open__2A7IE\",\"close\":\"Sidebar_close__31YHN\",\"list\":\"Sidebar_list__2y67a\",\"list_item\":\"Sidebar_list_item__7ZUiK\",\"button\":\"Sidebar_button__2wXCK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"question\":\"SpellQuestion_question__1aJXW\",\"button\":\"SpellQuestion_button__rxjnJ\",\"audioButton\":\"SpellQuestion_audioButton__7QkOt\",\"nextButton\":\"SpellQuestion_nextButton__e7pKQ\",\"options\":\"SpellQuestion_options__2bZEJ\",\"option\":\"SpellQuestion_option__1EVJ9\",\"answer\":\"SpellQuestion_answer__GQB5h\",\"correct\":\"SpellQuestion_correct__37RC_\",\"wrong\":\"SpellQuestion_wrong__3XKY5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__3mqcu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footbar\":\"App_footbar__2sA9n\"};","import React from 'react';\r\n\r\nconst Button = props => {\r\n  return (\r\n    <button\r\n      onClick={props.click}\r\n      className={props.classes}\r\n    >{props.children}</button>\r\n  )\r\n}\r\n\r\nexport default Button;","export const DDRAGON_BASE_URL = \"http://ddragon.leagueoflegends.com/cdn\";\r\nexport const CDRAGON_BASE_URL = \"https://raw.communitydragon.org\";\r\nexport const CDRAGON_SELECT_URL = \"plugins/rcp-be-lol-game-data/global/pt_br/v1/champion-choose-vo\";\r\nexport const CDRAGON_BAN_URL = \"plugins/rcp-be-lol-game-data/global/pt_br/v1/champion-ban-vo\";","import champions from './assets/champions.json';\r\n\r\nconst {data, keys} = champions;\r\n\r\nexport const shuffleChampions = numberChampions => {\r\n  const options = [];\r\n  const championKeys = Object.keys(keys);\r\n  let i = 0;\r\n  while(options.length < numberChampions && i < 10){\r\n    const option = championKeys[Math.floor(Math.random() * championKeys.length)];\r\n    if(!options.includes(option)) options.push(option);\r\n    i++;\r\n  }\r\n  \r\n  return options\r\n}\r\n\r\nexport const getChampionDataById = id => {\r\n  const champion = keys[id];\r\n  return data[champion];\r\n}\r\n\r\nexport const getChampionNameById = id => {\r\n  return getChampionDataById(id).name;  \r\n}\r\n\r\nexport const getChampionKeyById = id => {\r\n  return keys[id];\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"../../Button\";\r\nimport * as myConsts from '../../consts';\r\nimport classes from './Question.module.css';\r\nimport { FaPlay } from 'react-icons/fa';\r\nimport { getChampionNameById, getChampionKeyById } from '../../utils';\r\n\r\n\r\nconst AudioQuestion = ({version, questionOptions, champion, updateScore, nextQuestion, mode}) => {\r\n  const [answered, setAnswered] = useState(false);\r\n  const [correct, setCorrect] = useState(false);\r\n  const [audio, setAudio] = useState();\r\n\r\n  const subPath = mode === \"ban\" ? myConsts.CDRAGON_BAN_URL : myConsts.CDRAGON_SELECT_URL;\r\n  const imageUrl = `${myConsts.DDRAGON_BASE_URL}/${version}/img/champion/${getChampionKeyById(champion)}.png`;\r\n  const audioUrl = `${myConsts.CDRAGON_BASE_URL}/10.23/${subPath}/${champion}.ogg`;  \r\n\r\n  useEffect(() => {\r\n    setAnswered(false);\r\n  }, [champion]);\r\n  \r\n  useEffect(() => {\r\n    setAudio(new Audio(audioUrl))\r\n  }, [audioUrl]);\r\n\r\n  const getNextQuestion = () => {\r\n    audio.pause();\r\n    nextQuestion();\r\n  }\r\n\r\n  const checkAnswer = userAnswer => {\r\n    if(answered) return;\r\n    setAnswered(true);\r\n    const isCorrect = userAnswer === champion;\r\n    setCorrect(isCorrect);\r\n    updateScore(isCorrect);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.question}>\r\n      <Button click={() => audio.play()} classes={[classes.button, classes.audioButton].join` `}>\r\n        <FaPlay/>\r\n        Tocar fala de {mode === 'ban' ? 'banimento' : 'seleção'}\r\n      </Button>\r\n      <ul className={classes.options}>\r\n        {\r\n          questionOptions.map(option => (\r\n            <Button classes={classes.option} key={option} click={() => checkAnswer(option)}>{getChampionNameById(option)}</Button>\r\n          ))\r\n        }\r\n      </ul>\r\n      {answered ? (\r\n        <div className={classes.answer}>\r\n          {correct ? (\r\n            <h2 className={classes.correct}>Correto ✔</h2>\r\n          ) : (\r\n            <h2 className={classes.wrong}>Errado ❌</h2>\r\n          )}\r\n          <img\r\n            src={imageUrl}\r\n            alt=\"\"\r\n            height=\"100\"\r\n            width=\"100\"\r\n            />\r\n          <Button click={getNextQuestion} classes={[classes.button, classes.nextButton].join` `}> Próxima pergunta</Button>\r\n        </div>\r\n        ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioQuestion;","import React, { useState, useEffect } from 'react';\r\nimport classes from './SpellQuestion.module.css';\r\nimport Button from '../../Button';\r\nimport * as myConsts from '../../consts';\r\nimport { getChampionNameById } from '../../utils';\r\n\r\nconst SpellQuestion = ({champion, spell, options, answer, nextQuestion, updateScore}) => {\r\n  const [answered, setAnswered] = useState(false);\r\n  const [correct, setCorrect] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    setAnswered(false);\r\n  }, [spell])\r\n\r\n  const imageUrl = `${myConsts.DDRAGON_BASE_URL}/10.23.1/img/${spell.hotkey === 'Passive' ? 'passive' : 'spell'}/${spell.image}`;\r\n\r\n  const checkAnswer = userAnswer => {\r\n    if(answered) return;\r\n    setAnswered(true);\r\n    const isCorrect = userAnswer === answer;\r\n    setCorrect(isCorrect);\r\n    updateScore(isCorrect);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.question}>\r\n      <span>De quem é a habilidade <span style={{fontWeight: 'bold'}}>{spell.name}</span>?</span>\r\n      <ul className={classes.options}>\r\n        {\r\n          options.map(option => (\r\n            <Button classes={classes.option} click={() => checkAnswer(option)} key={option} >{getChampionNameById(option)}</Button>\r\n          ))\r\n        }\r\n      </ul>\r\n      {answered ? (\r\n        <div className={classes.answer}>\r\n          {correct ? (\r\n            <h2 className={classes.correct}>Correto ✔</h2>\r\n          ) : (\r\n            <h2 className={classes.wrong}>Errado ❌</h2>\r\n          )}\r\n          <h3>{`${champion.name} - ${spell.hotkey}`}</h3>\r\n          <img\r\n            src={imageUrl}\r\n            alt=\"\"\r\n            height=\"100\"\r\n            width=\"100\"\r\n          />\r\n          <Button click={() => nextQuestion()} classes={[classes.button, classes.nextButton].join` `}> Próxima pergunta</Button>\r\n\r\n        </div>\r\n        ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpellQuestion;","import React from 'react';\r\nimport Button from '../../Button';\r\nimport classes from './Sidebar.module.css';\r\nconst Sidebar = ({toggleGamemode, open}) => {\r\n\r\n  const sidebarClasses = [classes.sidebar];\r\n\r\n  sidebarClasses.push(open ? classes.open : classes.close)\r\n  return (\r\n    <div className={sidebarClasses.join` `}>\r\n      <ul className={classes.list}>\r\n        <li className={classes.list_item}>\r\n          <Button click={() => toggleGamemode(\"pick\")} classes={classes.button}>Campeão por fala de seleção</Button>\r\n        </li>\r\n        <li className={classes.list_item}>\r\n          <Button click={() => toggleGamemode(\"ban\")} classes={classes.button}>Campeão por fala de banimento</Button>\r\n        </li>\r\n        <li className={classes.list_item}>\r\n          <Button click={() => toggleGamemode(\"champion\")} classes={classes.button}>Campeão por nome da habilidade</Button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst Backdrop = ({click}) => {\r\n  return (\r\n    <div onClick={click} className={classes.backdrop}></div>\r\n  )\r\n}\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport { IconContext } from 'react-icons';\r\nimport { FaBars } from 'react-icons/fa'\r\nimport classes from './Navbar.module.css';\r\n\r\nimport Sidebar from './Sidebar/Sidebar';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nimport Button from '../Button';\r\n\r\nconst Navbar = ({sidebar, gamemode, score}) => {\r\n  return (\r\n    <nav className={classes.navbar}>\r\n      <div className={classes.mobile}>\r\n        <button className={classes.navbar_button} onClick={() => sidebar.toggle(true)}>\r\n          <IconContext.Provider value={{size: \"2rem\",  className: classes.navbar_menu, color: \"purple\"}}>\r\n            <FaBars />\r\n          </IconContext.Provider>\r\n        </button>\r\n        <Sidebar open={sidebar.show} toggleGamemode={gamemode.toggle}></Sidebar>    \r\n        {sidebar.show ?\r\n          (\r\n            <Backdrop click={() => sidebar.toggle(false)}></Backdrop>\r\n          ) : null\r\n        }\r\n      </div>\r\n    \r\n      <div className={classes.desktop}>\r\n      \r\n        <Button\r\n          click={() => gamemode.toggle(\"pick\")} \r\n          classes={[classes.nav_button, gamemode.name === \"pick\" ? classes.active : ''].join` `}\r\n        >\r\n          Campeão por fala de seleção\r\n        </Button>\r\n\r\n        <Button \r\n          click={() => gamemode.toggle(\"ban\")} \r\n          classes={[classes.nav_button, gamemode.name === \"ban\" ? classes.active : ''].join` `}\r\n        >\r\n          Campeão por fala de banimento\r\n        </Button>\r\n\r\n        <Button \r\n          click={() => gamemode.toggle(\"champion\")} \r\n          classes={[classes.nav_button, gamemode.name === \"champion\" ? classes.active : ''].join` `}\r\n        >\r\n          Campeão por nome da habilidade\r\n        </Button> \r\n      </div>\r\n      <div className={classes.score}>Score: {score}</div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import { useEffect, useState, useCallback } from 'react';\nimport AudioQuestion from './Question/AudioQuestion/AudioQuestion';\nimport SpellQuestion from './Question/SpellQuestion/SpellQuestion';\nimport Navbar from './Navbar/Navbar';\nimport React from 'react';\nimport * as utils from './utils';\nimport classes from './App.module.css';\n\nconst spellOrder = ['Q', 'W', 'E', 'R', 'Passive'];\n\nconst App = () =>  {\n  const [score, setScore] = useState(0);\n  const [gamemode, setGamemode] = useState();\n  const [version, setVersion] = useState();\n  const [component, setComponent] = useState(); \n  const [showSidebar, setShowSidebar] = useState(false);\n\n  const generateQuoteQuestion = useCallback(() => {\n    const options = utils.shuffleChampions(4);\n    return {\n      options,\n      answer: options[Math.floor(Math.random() * options.length)]\n    }\n  }, [])\n\n  const generateChampionSpellQuestion = useCallback(() => {\n    const options = utils.shuffleChampions(4);\n    const answer = options[Math.floor(Math.random() * options.length)];\n    const champion = utils.getChampionDataById(answer);\n\n    const spells = [...champion.spells];\n    spells.push(champion.passive);\n\n    const spellIndex = Math.floor(Math.random() * spells.length); \n    const spell = spells[spellIndex];\n\n    return {\n      options,\n      answer,\n      champion,\n      spell: {\n        hotkey: spellOrder[spellIndex],\n        name: spell.name,\n        image: spell.image.full\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const version = (await fetch(\"http://ddragon.leagueoflegends.com/api/versions.json\")\n                        .then(async(r) => await r.json())\n                      )[0]; \n      setVersion(version);\n    }\n    \n    fetchData();\n  },[]);\n\n  const getNextQuestion = (mode) => {\n    const questionMode = mode ?? gamemode;\n    switch (questionMode) {\n      case \"pick\":\n      case \"ban\":\n        const quoteQuestion = generateQuoteQuestion();\n        const quoteComponent = (\n          <AudioQuestion \n            updateScore={updateScore}\n            questionOptions={quoteQuestion.options}\n            champion={quoteQuestion.answer}\n            version={version}\n            nextQuestion={() => getNextQuestion(questionMode)}\n            mode={questionMode}\n          ></AudioQuestion>\n        );\n        setComponent(quoteComponent)\n        break;\n      case \"champion\":\n        const championQuestion = generateChampionSpellQuestion();\n        setComponent((\n          <SpellQuestion {...championQuestion} \n            nextQuestion={() => getNextQuestion(questionMode)} \n            updateScore={updateScore}\n          ></SpellQuestion>\n        ));\n        break;\n      default:\n        setComponent(null);\n        break;\n    }\n  }\n\n  const switchGamemode = (mode) => {\n    const msg = 'Se você trocar o modo de jogo, sua pontuação será zerada. Tem certeza?';\n    if(gamemode && gamemode !== mode && !window.confirm(msg)) return;\n    (() => {\n      setGamemode(mode);\n      setShowSidebar(false);\n      setScore(0);\n    })();\n\n    getNextQuestion(mode);\n  }\n  \n  const toggleSidebar = show => {\n    setShowSidebar(show)\n  }\n\n  const updateScore = (isCorrect) => {\n    setScore(prevScore => isCorrect ?  prevScore + 1 : 0);\n  }\n\n  return (\n    <React.Fragment>\n      <Navbar \n        sidebar={{show: showSidebar, toggle: toggleSidebar}} \n        gamemode={{name: gamemode, toggle: switchGamemode}}\n        score={score}\n      ></Navbar>\n      {component}\n      <div className={classes.footbar}>\n        This webite was created under Riot Games' \"Legal Jibber Jabber\" policy using assets owned by Riot Games.  Riot Games does not endorse or sponsor this project.\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}